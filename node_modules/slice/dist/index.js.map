{"version":3,"sources":["webpack://slice/webpack/universalModuleDefinition","webpack://slice/webpack/bootstrap","webpack://slice/./src/slice.js","webpack://slice/./src/common.js","webpack://slice/./src/slice-array.js","webpack://slice/./src/slice-string.js","webpack://slice/./src/range.js","webpack://slice/./src/index.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Slice","constructor","start","stop","step","_initialiseProps","this","undefined","parseInt","from","string","cleanedString","toString","replace","sliceMatch","match","slice","map","Number","isNaN","test","split","part","length","indices","array","Error","currentIndex","indexIsValid","Math","max","maximumPossibleIndex","index","min","minimumPossibleIndex","push","deleteProperty","every","extracted","String","join","has","set","values","splice","deleteCount","forEach","arrayIndex","valuesIndex","normalize","default","args","_slice","allowConstructionWithoutNew","Class","construct","setPrototypeOf","getPrototypeOf","constructTrap","action","target","negativeIndex","Reflect","result","boundMethod","includes","convertStrings","parent","entries","child","sliceProxyHandler","_common","Array","super","Proxy","_sliceArray","range","SliceArray","fill","_","isValid","currentValue","SliceString"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"slice\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"slice\"] = factory();\n\telse\n\t\troot[\"slice\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","class Slice {\n  constructor(start, stop, step) {\n    // Support the `Slice(stop)` signature.\n    if (stop === undefined && step === undefined) {\n      // eslint-disable-next-line no-param-reassign\n      [start, stop] = [stop, start];\n    }\n\n    // Support numerical strings.\n    this.start = start == null ? start : parseInt(start, 10);\n    this.stop = stop == null ? stop : parseInt(stop, 10);\n    this.step = step == null ? step : parseInt(step, 10);\n  }\n\n  static from = (string) => {\n    const cleanedString = (string || '').toString()\n      // Remove all whitespace.\n      .replace(/\\s/g, '')\n      // Replace colons with commas.\n      .replace(/:/g, ',');\n\n    // Handle actual `Slice` objects.\n    const sliceMatch = cleanedString.match(/^slice\\((null|-?\\d+),(null|-?\\d+),(null|-?\\d+)\\)$/i);\n    if (sliceMatch) {\n      const [start, stop, step] = sliceMatch.slice(1)\n        .map(value => parseInt(value, 10))\n        .map(value => (Number.isNaN(value) ? null : value));\n      return new Slice(start, stop, step);\n    }\n\n    // Handle the double bracket syntax and the standard Python syntax.\n    if (/^(-?\\d+)?(,(-?\\d+)?(,(-?\\d+)?)?)$/.test(cleanedString)) {\n      const [start, stop, step] = cleanedString.split(',')\n        .map(part => (part.length ? part : null));\n      return new Slice(start, stop, step);\n    }\n\n    return null;\n  };\n\n  indices = (array) => {\n    // Handle negative indices while preserving `null` values.\n    const start = this.start < 0 ? this.start + array.length : this.start;\n    const stop = this.stop < 0 ? this.stop + array.length : this.stop;\n\n    // Set the default step to `1`.\n    const step = this.step == null ? 1 : this.step;\n    if (step === 0) {\n      throw new Error('slice step cannot be zero');\n    }\n\n    // Find the starting index, and construct a check for if an index should be included.\n    let currentIndex;\n    let indexIsValid;\n    if (step > 0) {\n      currentIndex = start == null ? 0 : Math.max(start, 0);\n      const maximumPossibleIndex = stop == null ? array.length - 1 : stop - 1;\n      indexIsValid = index => (index <= maximumPossibleIndex);\n    } else {\n      currentIndex = start == null ? array.length - 1 : Math.min(start, array.length - 1);\n      const minimumPossibleIndex = stop == null ? 0 : stop + 1;\n      indexIsValid = index => (index >= minimumPossibleIndex);\n    }\n\n    // Loop through and add indices until we've completed the loop.\n    const indices = [];\n    while (indexIsValid(currentIndex)) {\n      if (currentIndex >= 0 && currentIndex < array.length) {\n        indices.push(currentIndex);\n      }\n      currentIndex += step;\n    }\n\n    return indices;\n  };\n\n  //\n  // Methods which correspond directly to proxy trap handlers.\n  //\n\n  deleteProperty = array => (\n    this.indices(array)\n      // eslint-disable-next-line no-param-reassign\n      .every(index => delete array[index])\n  );\n\n  get = (array) => {\n    let extracted;\n    // We can use the built in `Array.slice()` method for this special case.\n    if (array.slice && (this.step == null || this.step === 1)) {\n      const start = this.start == null ? undefined : this.start;\n      const stop = this.stop == null ? undefined : this.stop;\n      extracted = array.slice(start, stop);\n    } else {\n      extracted = this.indices(array)\n        .map(index => array[index]);\n    }\n\n    if (array instanceof String) {\n      return extracted.join('');\n    }\n\n    return extracted;\n  };\n\n  has = array => (\n    this.indices(array)\n      .every(index => index in array)\n  );\n\n  set = (array, values) => {\n    // We can insert arrays of any length for unextended slices.\n    if (array.splice && (this.step == null || this.step === 1)) {\n      const start = this.start < 0 ? Math.max(this.start + array.length, 0) : this.start;\n      const stop = this.stop < 0 ? this.stop + array.length : this.stop;\n      const deleteCount = this.stop == null ? array.length : stop - start;\n      array.splice(start, deleteCount, ...values);\n      return true;\n    }\n\n    // Otherwise, the lengths must match and we need to do them one-by-one.\n    const indices = this.indices(array);\n    if (indices.length !== values.length) {\n      throw new Error((\n        `attempt to assign sequence of size ${values.length} ` +\n        `to extended slice of size ${indices.length}`\n      ));\n    }\n\n    this.indices(array)\n      .forEach((arrayIndex, valuesIndex) => {\n        // eslint-disable-next-line no-param-reassign\n        array[arrayIndex] = values[valuesIndex];\n      });\n    return true;\n  };\n\n  toString = () => {\n    // Force `undefined`/`null` to both show up as `null`.\n    const normalize = value => (value == null ? null : value);\n    return `Slice(${normalize(this.start)}, ${normalize(this.stop)}, ${normalize(this.step)})`;\n  };\n}\n\n\nconst slice = (...args) => new Slice(...args);\n\n\nexport {\n  slice as default,\n  Slice,\n};\n","import { Slice } from './slice';\n\n\nexport const allowConstructionWithoutNew = (Class) => {\n  // A little bit of a hack to allow construction with and without the `new` keyword.\n  function construct(...args) {\n    return new Class(...args);\n  }\n  Object.setPrototypeOf(construct, Object.getPrototypeOf(Class));\n  construct.prototype = Class.prototype;\n  return construct;\n};\n\nexport const constructTrap = action => (target, name, value) => {\n  // Handle negative indices.\n  if (typeof name !== 'symbol' && /^\\s*-\\d+\\s*$/.test(name)) {\n    const negativeIndex = parseInt(name, 10);\n    const index = negativeIndex === 0 ? negativeIndex : target.length + negativeIndex;\n    return Reflect[action](target, index, value);\n  }\n\n  // Handle slices.\n  const slice = Slice.from(name);\n  if (slice) {\n    const result = slice[action](target, value);\n    if (!result && action !== 'get') {\n      return result;\n    }\n    // Handles `Array.from()` and `new String()` construction.\n    return target.constructor.from ?\n      target.constructor.from(result) :\n      new target.constructor(result);\n  }\n\n  // Fall back to the array's own properties...\n  const result = Reflect[action](target, name, value);\n\n  // ...but we need to doe some special handling to bind and wrap functions.\n  if (action === 'get' && typeof result === 'function') {\n    const boundMethod = result.bind(target);\n    // `Array` respects `Symbol.species`, but `String` doesn't. That means we need\n    // to actually override any of its methods which return strings.\n    if (target instanceof String && !['toString', 'valueOf'].includes(name)) {\n      // We'll do this recursively to handle `String.match()` and the like.\n      const convertStrings = (parent) => {\n        if (typeof parent === 'string') {\n          return new target.constructor(parent);\n        }\n        if (typeof parent === 'object') {\n          Object.entries(parent)\n            // eslint-disable-next-line no-param-reassign\n            .forEach(([key, child]) => { parent[key] = convertStrings(child); });\n        }\n        return parent;\n      };\n      return (...args) => convertStrings(boundMethod(...args));\n    }\n    return boundMethod;\n  }\n  return result;\n};\n\nexport const sliceProxyHandler = {\n  deleteProperty: constructTrap('deleteProperty'),\n  has: constructTrap('has'),\n  get: constructTrap('get'),\n  set: constructTrap('set'),\n};\n","import { allowConstructionWithoutNew, sliceProxyHandler } from './common';\n\n\nclass SliceArray extends Array {\n  constructor(...args) {\n    super(...args);\n    return new Proxy(this, sliceProxyHandler);\n  }\n}\n\nexport default allowConstructionWithoutNew(SliceArray);\n","import { allowConstructionWithoutNew, sliceProxyHandler } from './common';\n\n\nclass SliceString extends String {\n  constructor(...args) {\n    super(...args);\n    return new Proxy(this, sliceProxyHandler);\n  }\n}\n\nexport default allowConstructionWithoutNew(SliceString);\n","import SliceArray from './slice-array';\n\n\nconst range = (start, stop, step = 1) => {\n  if (stop == null) {\n    return range(0, start);\n  } else if (step === 1) {\n    return new SliceArray(Math.max(stop - start, 0))\n      .fill()\n      .map((_, index) => index + start);\n  }\n  const isValid = value => (step > 0 ? value < stop : value > stop);\n  const values = new SliceArray();\n  let currentValue = start;\n  while (isValid(currentValue)) {\n    values.push(currentValue);\n    currentValue += step;\n  }\n  return values;\n};\n\n\nexport default range;\n","import range from './range';\nimport slice, { Slice } from './slice';\nimport SliceArray from './slice-array';\nimport SliceString from './slice-string';\n\n\nexport {\n  range,\n  slice,\n  Slice,\n  SliceArray,\n  SliceString,\n};\n"],"sourceRoot":""}